---------------01. Recordsâ€™ Count -----------------------------

SELECT COUNT(Id) AS Count
FROM WizzardDeposits



-------------------02. Longest Magic Wand --------------------
SELECT MAX(MagicWandSize) AS LongestMagicWand
FROM WizzardDeposits

--------03. Longest Magic Wand per Deposit Groups -------
SELECT DepositGroup,MAX(MagicWandSize) AS LongestMagicWand
FROM WizzardDeposits
GROUP BY DepositGroup


----------04. Smallest Deposit Group per Magic Wand Size------


SELECT TOP 2 DepositGroup
FROM WizzardDeposits
GROUP BY DepositGroup
ORDER BY AVG(MagicWandSize)



--------------05. Deposits Sum --------------
SELECT DepositGroup,SUM(DepositAmount) as TotalDepositAmount
FROM WizzardDeposits
GROUP by DepositGroup

---------------06. Deposits Sum for Ollivander Family ----------

SELECT DepositGroup,SUM(DepositAmount) AS TotalSum
	FROM WizzardDeposits
	WHERE MagicWandCreator = 'Ollivander family'
	GROUP BY DepositGroup


	------------------07. Deposits Filter --------

	SELECT DepositGroup,SUM(DepositAmount) AS TotalSum
	FROM WizzardDeposits
	WHERE MagicWandCreator = 'Ollivander family'
	GROUP BY DepositGroup
	HAVING SUM(DepositAmount) < 150000
	ORDER BY TotalSum DESC
	





	-------------08. Deposit Charge ---------

	SELECT DepositGroup, MagicWandCreator ,MIN(DepositCharge) AS MinDepositCharge 
	FROM WizzardDeposits
	GROUP BY DepositGroup,MagicWandCreator


	--------09. Age Groups -------------
	SELECT AgeGroup, COUNT(AgeGroupTable.AgeGroup)
	FROM
	(

	SELECT 
	CASE
	WHEN Age BETWEEN 0 AND 10 THEN '[0-10]'
	WHEN Age BETWEEN 11 AND 20 THEN '[11-20]'
	WHEN Age BETWEEN 21 AND 30 THEN '[21-30]'
	WHEN Age BETWEEN 31 AND 40 THEN '[31-40]'
	WHEN Age BETWEEN 41 AND 50 THEN '[41-50]'
	WHEN Age BETWEEN 51 AND 60 THEN '[51-60]'
	ELSE '[61+]'
	END
	AS  AgeGroup
	FROM WizzardDeposits
	
	) AS AgeGroupTable

	GROUP BY AgeGroupTable.AgeGroup



	-------------10. First Letter --------------

	SELECT LEFT( FirstName,1) AS FirstLetter
	FROM WizzardDeposits
	Where DepositGroup LIKE'Troll Chest'
	GROUP BY LEFT( FirstName,1)
	ORDER BY FirstLetter


--	Write a query that returns all unique wizard first letters of their first names only if they have deposit of type Troll
--Chest. Order them alphabetically. Use GROUP BY for uniqueness.




---------------11. Average Interes--------------
SELECT * FROM WizzardDeposits

SELECT DepositGroup,IsDepositExpired,AVG(DepositInterest) AS AverageInterest
FROM WizzardDeposits
WHERE DepositStartDate > '01/01/1985' 
GROUP BY DepositGroup,IsDepositExpired
Order By DepositGroup DESC,IsDepositExpired




--------------Problem 12. * Rich Wizard, Poor Wizard-----------


---1.
SELECT SUM(k.DIFF) AS SumDifference
FROM(
SELECT wd.DepositAmount - (SELECT w.DepositAmount  From WizzardDeposits as w where w.Id = wd.Id + 1) 
AS DIFF
   FROM WizzardDeposits AS wd
   ) AS k


   ----2.
   SELECT SUM(k.SumDiff)
   FROM(
   SELECT DepositAmount -LEAD(DepositAmount,1) OVER (ORDER BY Id) AS SumDiff
	FROM WizzardDeposits
	) AS k



	-----------------13. Departments Total Salaries -------------
	--USE SoftUni--
	SELECT DepartmentID,SUM(Salary) AS TotalSUm
	FROM Employees
	GROUP By DepartmentID


	------------14. Employees Minimum Salaries ------------
	SELECT DepartmentID, MIN(Salary) AS MinimumSalary
	FROM Employees
	WHERE DepartmentID IN(2,5,7) AND HireDate > '01/01/2000'	
	GROUP By DepartmentID
	


	---------15. Employees Average Salaries ------------


	SELECT * INTO NewTable
	FROM Employees
	WHERE Salary> 30000


DELETE FROM NewTable
WHERE ManagerID = 42


UPDATE NewTable
SET Salary +=5000
WHERE DepartmentID = 1

SELECT DepartmentID,AVG(Salary) AS AverageSalary
From NewTable
GROUP BY DepartmentID




---------------16. Employees Maximum Salaries --------------

SELECT DepartmentID,MAX(Salary)
FROM Employees
GROUP BY DepartmentID
HAVING MAX(Salary) NOT BETWEEN 30000 AND 70000


-----17. Employees Count Salaries -----
SELECT COUNT(*)
FROM Employees
WHERE ManagerID is NULL





------------18. 3rd Highest Salary----------
SELECT DISTINCT k.DepartmentID,k.Salary
FROM (
SELECT DepartmentID,Salary, DENSE_RANK() OVER ( PARTITION BY DepartmentID ORDER BY Salary DESC) AS SalaryRank
FROM Employees) AS k
where k.SalaryRank = 3




-----------------19. Salary Challenge----------------


SELECT TOP 10 FirstName,LastName,DepartmentID
FROM Employees AS e
WHERE Salary > (SELECT AVG(Salary) FROM Employees AS em Where em.DepartmentID = e.DepartmentID )
ORDER BY DepartmentID
